name: building-and-deployment

on:
  push:
    branches: [main, feature/*]
  workflow_dispatch:

env:
  project_name: "yourclock-common-utils-lib"
  language: "javascript" #javascript, java, python
  branch_default: "main"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      ETHEREAL_HOST: ${{ secrets.ETHEREAL_HOST }}
      ETHEREAL_PORT: ${{ secrets.ETHEREAL_PORT }}
      ETHEREAL_PWD: ${{ secrets.ETHEREAL_PWD }}
      ETHEREAL_USER: ${{ secrets.ETHEREAL_USER }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install and build tests
        shell: bash
        run: npm ci && npm run test:coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: lcov-report
          retention-days: 1
          path: coverage/lcov.info

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@v2
        with:
          name: lcov-report
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: SonarCloud Verify results
        shell: bash
        run: |
          state_sonar=$(curl --location --request GET 'https://sonarcloud.io/api/qualitygates/project_status?projectKey=your-clock_${{ env.project_name }}&branch=${{ env.branch_default }}' | jq '.projectStatus.status')
          if [ "$state_sonar" != "\"OK\"" ]; then echo "Quality Gate with state: $state_sonar"; exit 1; else echo "Quality Gate OK"; exit 0; fi

  build:
    runs-on: ubuntu-latest
    needs: sonar
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('package.json') }}
          restore-keys: npm-${{ env.cache-name }}
      - name: Install dependencies and build
        shell: bash
        run: |
          npm ci
          npm run build
      - name: Persist Data
        uses: actions/upload-artifact@v2
        with:
          name: build
          retention-days: 1
          path: build

  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('package.json') }}
          restore-keys: npm-${{ env.cache-name }}
      - name: Restore Data
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Publish Package
        shell: bash
        run: npm publish